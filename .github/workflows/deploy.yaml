name: Full Deploy with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to NCP Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and Push Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.NCP_CONTAINER_REGISTRY }}/prv-backend:latest
            ${{ secrets.NCP_CONTAINER_REGISTRY }}/prv-backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/prv-backend:latest
          cache-to: type=inline

      - name: Create .env file
        run: |
          echo "DJANGO_SECRET_KEY=${{ secrets.ENV_DJANGO_SECRET_KEY }}" >> .env
          echo "DJANGO_SETTINGS_MODULE=${{ secrets.ENV_DJANGO_SETTINGS_MODULE }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ENV_ALLOWED_HOSTS }}" >> .env
          echo "DJANGO_SUPERUSER_USERNAME=${{ secrets.ENV_DJANGO_SUPERUSER_USERNAME }}" >> .env
          echo "DJANGO_SUPERUSER_EMAIL=${{ secrets.ENV_DJANGO_SUPERUSER_EMAIL }}" >> .env
          echo "DJANGO_SUPERUSER_PASSWORD=${{ secrets.ENV_DJANGO_SUPERUSER_PASSWORD }}" >> .env

      - name: Copy docker-compose and .env to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
          port: ${{ secrets.DEV_PORT }}
          source: "docker-compose.yml,.env"
          target: "~/deploy"

      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
          port: ${{ secrets.DEV_PORT }}
          script: |
            cd ~/deploy
            docker login ${{ secrets.NCP_CONTAINER_REGISTRY }} -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }}
            docker-compose pull
            docker-compose up -d
            docker image prune -f --filter "until=24h"
